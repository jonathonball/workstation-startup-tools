#!/usr/bin/env zsh

function show_usage() {
  echo "Usage: new-file FILE...";
  echo "Create one or more files using templates found in ~/Templates";
  echo "";
  echo "Script accepts paths one after another as arguments.  Paths can be relative or absolute."
  echo "";
  echo "Example:";
  echo "new-file /tmp/some-text-file.txt";
};

function string_compare() {
  left=$1;
  operator=$2;
  right=$3;
  case "${operator}" in
    EQUALS|equals)
      [[ "${left}" == "${right}" ]];
      return $?;
      ;;
    *)
      return 1;
      ;;
  esac;
};

function has_valid_file_extension() {
  input_path=$1;
  filename="${input_path##*/}";
  extension="${filename#*.}";
  if string_compare $filename EQUALS $extension; then
    return 1;
  fi;
  return 0;
};

function file_exists() {
  filepath=$1;
  [[ -f $filepath ]];
  return $?;
};

function known_file_extension() {
  extension=$1;
  for known_extension in "${VALID_FILE_EXTENSIONS[@]}"; do
    if string_compare $known_extension EQUALS $extension; then
      return 0;
    fi;
  done;
  return 1;
};

# Read in available template file extensions
VALID_FILE_EXTENSIONS=();
find ~/Templates -type f | while read template; do
  if has_valid_file_extension $template; then
    filename="${template##*/}";
    extension="${filename#*.}";
    VALID_FILE_EXTENSIONS=( "${VALID_FILE_EXTENSIONS[@]}" "${extension}");
  else
    echo "$template template file doesn't have a valid extension" >&2;
    exit 1;
  fi;
done;

# Show usage and exit if user provides -h or --help
if [[ "${@}" =~ (-h|--help) ]]; then
  show_usage;
  exit 1;
fi;

# Show usage and exit if user provides no arguments
if [[ "$#" -le "0" ]]; then
  show_usage;
  exit 1
fi;

# Attempt to create a new file for each argument provided
for argument in "${@}"; do
  if has_valid_file_extension $argument; then
    filepath="${argument#*/}";
    extension="${filepath#*.}";
    if file_exists $argument; then
      echo "$filepath already exists." >&2;
    else
      if known_file_extension $extension; then
        find ~/Templates -name "*.${extension}" -exec cp {} $argument \;
      else
        echo "Unknown file extension $extension" >&2;
      fi;
    fi;
  fi;
done;
