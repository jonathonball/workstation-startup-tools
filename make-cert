#!/bin/bash
# Creates a self-signed cert

function exists() {
    filename="$1";
    verbose="$2";
    if [[ -a ${filename} ]]; then
        if [ -z "${verbose}" ]; then
            echo "[make-cert] skipping [${1}]...";
        fi;
        return 0;
    fi;
    if [ -z "${verbose}" ]; then
        echo "[make-cert] generating [${1}]...";
    fi;
    return 1;
};

MIN_KEY_BITS=2048;
cert_name=$1;
key_bits=$2;
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
work_dir=${script_dir}/${cert_name};

if [ -z "$cert_name" ]; then
    echo "Provide key name as first argument.";
    exit 1;
fi;

# Check if 2nd argument is a number
if [ -z "${key_bits##*[!0-9]*}" ]; then
   echo "Provide number of bits for key size as second argument.";
   exit 1;
fi;

if [ $key_bits -lt ${MIN_KEY_BITS} ]; then
    echo "Second argument must be greater than or equal to ${MIN_KEY_BITS}";
    exit 1;
fi;

if [ ! -d "${work_dir}" ]; then
    echo "Creating ${work_dir}";
    mkdir ${work_dir};
fi;
cd ${work_dir};

private_key_file=${work_dir}/${cert_name}.pk.pem;
certificate_signing_request_file=${work_dir}/${cert_name}.csr.pem;
certificate_file=${work_dir}/${cert_name}.cert.pem;
pkcs12_file=${work_dir}/${cert_name}.pkcs12.p12;
certificate_authority_certificate_file=${work_dir}/${cert_name}.ca-cert.pem;

if ! exists $private_key_file; then
    openssl genrsa -out $private_key_file $key_bits;
fi;
    
if ! exists $certificate_signing_request_file; then
    openssl req -new -sha256 \
        -key $private_key_file \
        -out $certificate_signing_request_file;
fi;

if ! exists $certificate_file; then
    openssl x509 -req \
    -in ${certificate_signing_request_file} \
    -signkey ${private_key_file} \
    -out ${certificate_file};
fi;

if exists ${certificate_authority_certificate_file} "silent"; then
    echo "[make-cert] found ${certificate_authority_certificate_file}...";
    if ! exists $pkcs12_file; then
        openssl pkcs12 -export \
            -in $certificate_file \
            -inkey $private_key_file \
            -certfile $certificate_authority_certificate_file \
            -out $pkcs12_file;
    fi;
else
    echo "[make-cert] cannot generate ${pkcs12_file} without ${certificate_authority_certificate_file}...";
fi;

echo "[mark-cert] generate:";
tree ${work_dir};
